name: Deploy

on:
  push:
    tags:
      - 'v*'

jobs:
  deploy:
    name: Deploy to TestFlight
    runs-on: macos-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Select Xcode
      run: sudo xcode-select -s /Applications/Xcode.app
      
    - name: Install XcodeGen
      run: brew install xcodegen
      
    - name: Generate Xcode Project
      run: xcodegen generate
      
    - name: Install Dependencies
      run: |
        if [ -f "./Podfile" ]; then
          pod install
        fi
        
    - name: Setup Keychain
      env:
        KEYCHAIN_NAME: "ci-keychain"
        KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
      run: |
        security create-keychain -p "$KEYCHAIN_PASSWORD" "$KEYCHAIN_NAME"
        security default-keychain -s "$KEYCHAIN_NAME"
        security unlock-keychain -p "$KEYCHAIN_PASSWORD" "$KEYCHAIN_NAME"
        security set-keychain-settings -t 3600 -l "$KEYCHAIN_NAME"
        
    - name: Setup Provisioning Profile
      env:
        PROVISIONING_PROFILE_BASE64: ${{ secrets.PROVISIONING_PROFILE_BASE64 }}
      run: |
        echo -n "$PROVISIONING_PROFILE_BASE64" | base64 --decode --output ~/Library/MobileDevice/Provisioning\ Profiles/profile.mobileprovision
        
    - name: Setup Certificates
      env:
        CERTIFICATE_BASE64: ${{ secrets.CERTIFICATE_BASE64 }}
        CERTIFICATE_PASSWORD: ${{ secrets.CERTIFICATE_PASSWORD }}
        KEYCHAIN_NAME: "ci-keychain"
        KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
      run: |
        echo -n "$CERTIFICATE_BASE64" | base64 --decode --output /tmp/certificate.p12
        security import /tmp/certificate.p12 -k "$KEYCHAIN_NAME" -P "$CERTIFICATE_PASSWORD" -T /usr/bin/codesign
        rm /tmp/certificate.p12
        
    - name: Build and Archive
      env:
        TEAM_ID: ${{ secrets.TEAM_ID }}
      run: |
        xcodebuild archive \
          -scheme NeuroNest \
          -archivePath build/NeuroNest.xcarchive \
          DEVELOPMENT_TEAM="$TEAM_ID"
          
    - name: Export IPA
      env:
        TEAM_ID: ${{ secrets.TEAM_ID }}
      run: |
        xcodebuild -exportArchive \
          -archivePath build/NeuroNest.xcarchive \
          -exportOptionsPlist exportOptions.plist \
          -exportPath build/
          
    - name: Upload to TestFlight
      env:
        APP_STORE_CONNECT_API_KEY_ID: ${{ secrets.APP_STORE_CONNECT_API_KEY_ID }}
        APP_STORE_CONNECT_API_ISSUER_ID: ${{ secrets.APP_STORE_CONNECT_API_ISSUER_ID }}
        APP_STORE_CONNECT_API_KEY_BASE64: ${{ secrets.APP_STORE_CONNECT_API_KEY_BASE64 }}
      run: |
        xcrun altool --upload-app -f build/NeuroNest.ipa \
          --apiKey "$APP_STORE_CONNECT_API_KEY_ID" \
          --apiIssuer "$APP_STORE_CONNECT_API_ISSUER_ID" \
          --type ios 